  // const provinces = [
  //   { name: 'Alberta', code: 'AB' },
  //   { name: 'British Columbia', code: 'BC' },
  //   { name: 'Manitoba', code: 'MB' },
  //   { name: 'New Brunswick', code: 'NB' },
  //   { name: 'Newfoundland and Labrador', code: 'NL' },
  //   { name: 'Nova Scotia', code: 'NS' },
  //   { name: 'Northwest Territories', code: 'NT' },
  //   { name: 'Nunavut', code: 'NU' },
  //   { name: 'Ontario', code: 'ON' },
  //   { name: 'Prince Edward Island', code: 'PE' },
  //   { name: 'Quebec', code: 'QC' },
  //   { name: 'Saskatchewan', code: 'SK' },
  //   { name: 'Yukon', code: 'YT' }
  // ];

     <Route exact path="/properties/:propertyid">
              <PropertyDetails />
            </Route>
            <Route exact path="/prices/:priceid">
              <PriceDetails />
            </Route>

            import React, { useState, useEffect } from "react";
import axios from "axios";
import { ReactSession } from 'react-client-session';
import { useHistory, useParams } from "react-router-dom";

const PriceDetails = () => {

  const history = useHistory()
  const userRole = ReactSession.get("role");
  if (userRole !== 'admin') {
    history.push('/')
    window.location.reload();
  }

  const id = useParams().priceid
  const [price, setPrice] = useState(null)
  const [isPending, setIsPending] = useState(false);

  useEffect(() => {
  axios.get(`http://localhost:8000/prices/${id}`)
    .then((response) => {
      setPrice(response.data)
    })
  }, [id]);

  const handleClick = () => {
    console.log("Clicked Delete")
    setIsPending(true)
    axios.delete(`http://localhost:8001/prices/${id}`)
      .then((response) => {
        console.log('Price Deleted', response.data);
        setTimeout(function () {
          setIsPending(false)
 	        history.push('/admin')
        }, 500);
      })
      .catch((error) => {
        console.log(error);
      });
  }
  
  return (    
    <li>
      {price && (
        <div>
          <h3>{price.property_id}, {price.admin_status}</h3> 
          <h3>{price.price}</h3>
          <h3>{price.property_type}, {price.square_footage}</h3>
          <h3>{price.number_of_bedrooms},{price.number_of_bathrooms}</h3>
          { !isPending && <button onClick={handleClick}>Delete</button> }
          {isPending && <button disabled>Deleting Price...</button>}
        </div>  
      )}
    </li>    
  );
}

export default PriceDetails;

import React, { useState, useEffect } from "react";
import axios from "axios";
import { ReactSession } from 'react-client-session';
import { useHistory, useParams } from "react-router-dom";

const PropertyDetails = () => {

  const history = useHistory()
  const userRole = ReactSession.get("role");
  if (userRole !== 'admin') {
    history.push('/')
    window.location.reload();
  }

  const id = useParams().propertyid
  const [property, setProperty] = useState(null)
  const [isPending, setIsPending] = useState(false);

  useEffect(() => {
  axios.get(`http://localhost:8000/properties/${id}`)
    .then((response) => {
      setProperty(response.data)
    })
  }, [id]);

  const handleClick = () => {
    console.log("Clicked Delete")
    setIsPending(true)
    axios.delete(`http://localhost:8001/properties/${id}`)
      .then((response) => {
        console.log('Property Deleted', response.data);
        setTimeout(function () {
          setIsPending(false)
 	        history.push('/admin')
        }, 500);
      })
      .catch((error) => {
        console.log(error);
      });
  }
  
  return (    
    <li>
      {property && (
        <div>
          <h3>{property.street_address}</h3>          
          <h3>{property.province}, {property.city}</h3>
          <h3>{property.latitude},{property.longitude}</h3>
          { !isPending && <button onClick={handleClick}>Delete</button> }
          { isPending && <button disabled>Deleting Property...</button> }
        </div>  
      )}
    </li>    
  );
}

export default PropertyDetails;

import { useState } from "react";
import axios from "axios";
import './CreateProperty.scss'

const FindProperty = () => {

  const [province, setProvince] = useState('');
  const [city, setCity] = useState('');
  const [address, setAddress] = useState('');
  const [id, setId] = useState('Awaiting Search ...')

  const handleSubmit = (event) => {
    event.preventDefault();

    const addressForUrl = `${address}, ${city}`
    const propertyURL = `https://maps.googleapis.com/maps/api/geocode/json?address=${addressForUrl}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}` 
    
    console.log('Clicked Find Property')

    axios.get(propertyURL)
      .then((response) => {
        const latitude = response.data.results[0].geometry.location.lat 
        const longitude = response.data.results[0].geometry.location.lng 
        const property = {
          'province': province,
          'city': city,
          'street_address': address,
          'latitude': latitude,
          'longitude': longitude
        }
        console.log(property)
        axios.post('http://localhost:8001/properties/find', property)
          .then((response) => {
            if (response.data) {
              console.log('Property Found:', response.data);
              setId(`Your Property ID: ${response.data.id}`)
            } else {
              console.log("Property Not Found")
              setId("Property Not Found")
            }
            // window.location.reload()
          })
          .catch((error) => {
            console.log(error);
          });
      })
      .catch((error) => {
        console.log(error);
      });    
  }

  return (
     <div className="wrapper-property">
      <div className="title">
        Find Your Property
      </div>
      <div className="form">
        <div className="inputfield">
          <label>Province</label>
          <div className="custom_select">
            <select
              value={province}
              onChange={(event) => setProvince(event.target.value)}
            >
              <option value="">Select</option>  
              <option value="AB">Alberta</option>
              <option value="BC">British Columbia</option>
              <option value="MB">Manitoba</option>
              <option value="NB">New Brunswick</option>
              <option value="NL">Newfoundland and Labrador</option>
              <option value="NS">Nova Scotia</option>
              <option value="NT">Northwest Territories</option>
              <option value="NU">Nunavut</option>
              <option value="ON">Ontario</option>
              <option value="PE">Prince Edward Island</option>
              <option value="QC">Quebec</option>
              <option value="SK">Saskatchewan</option>
              <option value="YT">Yukon</option>
            </select>
          </div>
        </div>
        <div className="inputfield">
          <label>City</label>
          <input
            type="text"
            className="input"
            required
            value={city}
            onChange={(event) => setCity(event.target.value)}
          />
        </div>
        <div className="inputfield">
          <label>Street Address</label>
          <input
            type="text"
            className="input"
            required
            value={address}
            onChange={(event) => setAddress(event.target.value)}
          />
        </div>
        <div className="inputfield">
          <input type="submit" value="Find Property" className="btn" onClick={handleSubmit} />
        </div>
      </div>
      <div>
        <p>{id}</p>
      </div>
    </div>
  )
}

export default FindProperty;